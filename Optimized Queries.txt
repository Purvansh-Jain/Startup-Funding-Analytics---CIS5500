# Investor search (route 11)

SELECT f.ID, f.name, IFNULL(f.market, "") AS market, IFNULL(f.country, "") AS country, IFNULL(f.state, "") AS state,
       IFNULL(f.city, "") AS city, IFNULL(i.is_person, "False") AS is_person, IFNULL(num_investments, 0) AS num_investments, IFNULL(num_acquisitions, 0) AS num_acquisitions
FROM Financial_Entity f
    LEFT JOIN Investor i ON f.ID = i.investor_ID LEFT JOIN (SELECT investor_ID, COUNT(*) AS num_investments FROM Round GROUP BY investor_ID) r
    ON i.investor_ID = r.investor_ID
LEFT JOIN (SELECT acquirer_ID, COUNT(*) AS num_acquisitions FROM Acquisition GROUP BY acquirer_ID) a ON f.ID = a.acquirer_ID
WHERE NOT ISNULL(num_investments) OR NOT ISNULL(num_acquisitions) AND
    name LIKE ${name} AND
    market LIKE ${market} AND
    country LIKE ${country} AND
    state LIKE ${state} AND
    city LIKE ${city} AND
    is_person LIKE ${is_person} AND
    num_investments >= ${num_investmentsLow} AND num_investments <= ${num_investmentsHigh} AND
    num_acquisitions >= ${num_acquisitionsLow} AND num_acquisitions <= ${num_acquisitionsHigh}
ORDER BY name
LIMIT ${start}, ${pagesize};

WITH Cleaned_FE AS (
    SELECT *
    FROM Financial_Entity
    WHERE name LIKE "${name}" AND
        market LIKE "${market}" AND
        country LIKE "${country}" AND
        state LIKE "${state}" AND
        city LIKE "${city}"
)

SELECT f.ID, f.name, f.market, f.country, f.state, f.city, IFNULL(r1.is_person, "False") AS is_person,
       IFNULL(r1.num_investments, 0) AS num_investments, IFNULL(a.num_acquisitions, 0) AS num_acquisitions
FROM Cleaned_FE f LEFT JOIN (
                    SELECT * FROM
                    Investor i NATURAL JOIN (SELECT investor_ID, COUNT(*) AS num_investments
                                     FROM Round GROUP BY investor_ID) r) r1
                    ON f.id = r1.investor_ID

                LEFT JOIN (
                    SELECT acquirer_ID, COUNT(*) AS num_acquisitions
                    FROM Acquisition
                    GROUP BY acquirer_ID) a ON f.ID = a.acquirer_ID
WHERE num_investments >= ${num_investmentsLow} AND num_investments <= ${num_investmentsHigh} AND
        num_acquisitions >= ${num_acquisitionsLow} AND num_acquisitions <= ${num_acquisitionsHigh}
ORDER BY name
LIMIT ${start}, ${pagesize};

# Pie chart aggregation (route 4)

WITH cleaned_FE AS (
    SELECT market, ID
    FROM Financial_Entity
), cleaned_Round AS (
    SELECT company_ID, amount_USD, date
    FROM (
        SELECT company_ID, round_number, date, amount_USD
        FROM Round
        WHERE amount_USD IS NOT NULL
        GROUP BY company_ID, round_number, date) a
)

(SELECT market, SUM(amount_USD) AS total_funding
FROM cleaned_FE f JOIN cleaned_Round r ON f.ID = r.company_ID
WHERE amount_USD IS NOT NULL AND YEAR(date) = ${year}
GROUP BY market
ORDER BY total_funding DESC LIMIT 20)

UNION

(SELECT "Other" AS market, SUM(amount_USD) AS total_funding
FROM (SELECT *
    FROM cleaned_FE f JOIN cleaned_Round r ON f.ID = r.company_ID
    LIMIT 5000000 OFFSET 20) a
WHERE amount_USD IS NOT NULL AND YEAR(date) = ${year}
ORDER BY total_funding);

# International Investors (route 5)

WITH CleanedRound AS (
    SELECT company_ID, investor_ID, round_type
    FROM Round
),  CleanedCompany AS (
    SELECT id, country AS company_country
    FROM Financial_Entity
    WHERE is_a = "company" AND country IS NOT NULL
), CleanedInvestor AS (
    SELECT id, country AS investor_country
    FROM Financial_Entity
    WHERE is_a = "investor" AND country IS NOT NULL
)
SELECT round_type,
       SUM(IF(company_country != investor_country,1,0)) / COUNT(*) * 100 AS percentage_international
FROM CleanedRound r
    JOIN CleanedCompany c ON r.company_id = c.id
    JOIN CleanedInvestor i ON r.investor_id = i.id
GROUP BY round_type
ORDER BY SUM(IF(company_country != investor_country,1,0)) / COUNT(*) DESC

# Company Search (route 7)

WITH TotalFunding AS (
    SELECT company_ID, IFNULL(SUM(amount_USD), 0) AS total_funding
    FROM (
        SELECT company_ID, round_number, date, amount_USD
        FROM Round
        GROUP BY company_id, round_number, date) r
    GROUP BY company_ID),
Cleaned_FE AS (
    SELECT *
    FROM Financial_Entity
    WHERE name LIKE "${name}" AND
    market LIKE "${market}" AND
    country LIKE "${country}" AND
    state LIKE "${state}" AND
    city LIKE "${city}"
    )
SELECT f.ID, f.name, IFNULL(f.market, "") AS market, IFNULL(f.country, "") AS country, IFNULL(f.state, "") AS state,
       IFNULL(f.city, "") AS city, c.founding_date, c.status, IFNULL(total_funding, 0) AS total_funding
FROM Cleaned_FE f JOIN Company c ON f.ID = c.company_ID JOIN TotalFunding tf ON f.ID = tf.company_ID
WHERE total_funding >= ${total_fundingLow} AND total_funding <= ${total_fundingHigh}
GROUP BY ID, name, market, country, state, city, founding_date, status
ORDER BY name
LIMIT ${start}, ${pagesize};